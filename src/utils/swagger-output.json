{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "M3P-Express Pharmacy",
    "description": "Documentation Backend Sistema Express Pharmacy, projeto avaliativo M3-Squad-1 : bugBusters ."
  },
  "basePath": "/api-docs",
  
  "tags": [
    {
      "name": "User",
      "description": "Rotas para cadastro e login de usuário comprador."
    },
    {
      "name": "Admin",
      "description": "Rotas cadastro e login de usuário administrador."
    },
    {
      "name": "Products",
      "description": "Rotas relacionadas aos Produtos."
    },
    {
      "name": "Buyers",
      "description": "Rotas de informações de compradores."
    },
    {
      "name": "Sales",
      "description": "Rotas relacionadas as Sales."
    }
  ],
  "schemes": [
    "http", 
    "https"
  ],
  "securityDefinitions": {
    "apiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "token"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/user/login": {
      "post": {
        "description": "Login do usuário com email e senha",
        "tags": [
          "User"
        ],
        "summary": "Login do usuário",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "alexandre@email.com"
                },
                "password": {
                  "example": "Senha@12345"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario logado com sucesso"
          },
          "401": {
            "description": "Unauthorized",
            "message": "Email ou senha incorretos"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/user/signup": {
      "post": {
        "description": "Rota para cadastrar um novo usuário",
        "summary": "Cadastro de usuário",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "full_name": {
                      "type": "string"
                    },
                    "cpf": {
                      "type": "string"
                    },
                    "birth_date": {
                      "type": "string"
                    },
                    "email": {
                      "type": "example@email.com"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "password": {
                      "definitions": "Deve conter no mínimo 8 caracteres 1 letra maiúscula, 1 letra minúscula, 1 número e 1 caractere especial",
                      "type": "string"
                    }
                  },
                  "required": [
                    "full_name",
                    "cpf",
                    "birth_date",
                    "email",
                    "phone",
                    "password"
                  ]
                },
                "address": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "zip": {
                        "type": "string"
                      },
                      "street": {
                        "type": "string"
                      },
                      "number_street": {
                        "type": "string"
                      },
                      "neighborhood": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "complement": {
                        "type": "string"
                      },
                      "lat": {
                        "type": "string"
                      },
                      "long": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "zip",
                      "street",
                      "number_street",
                      "neighborhood",
                      "city",
                      "state"
                    ]
                  }
                }
              },
              "required": [
                "user",
                "address"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario cadastrado com sucesso"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/user/admin/signup": {
      "post": {
        "description": "Rota para cadastrar um novo administrador",
        "summary": "Cadastro de Administrador",
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "full_name": {
                      "type": "string"
                    },
                    "cpf": {
                      "type": "string"
                    },
                    "birth_date": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "type_user": {
                      "description": "Admin ou Buyer",
                      "type": "string"
                    }
                  },
                  "required": [
                    "full_name",
                    "cpf",
                    "birth_date",
                    "email",
                    "phone",
                    "password",
                    "type_user"
                  ]
                },
                "address": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "zip": {
                        "type": "string"
                      },
                      "street": {
                        "type": "string"
                      },
                      "number_street": {
                        "type": "string"
                      },
                      "neighborhood": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "complement": {
                        "type": "string"
                      },
                      "lat": {
                        "type": "string"
                      },
                      "long": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "zip",
                      "street",
                      "numberStreet",
                      "neighborhood",
                      "city",
                      "state"
                    ]
                  }
                }
              },
              "required": [
                "user",
                "address"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Os registros foram criados com sucesso"
          },
          "400": {
            "description": "Campos mal formatados"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Exceção de campos duplicados"
          },
          "422": {
            "description": "Campo obrigatório não preenchido"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/user/admin/login": {
      "post": {
        "description": "Login do administrador com email e senha",
        "summary": "Login do administrador",
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "string"
                },
                "password": {
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario logado com sucesso"
          },
          "401": {
            "description": "Unauthorized",
            "message": "Email ou senha incorretos"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/products/admin": {
      "post": {
        "description": "Este endpoint deve cadastrar um produto na aplicação.",
        "tags": [
          "Products"
        ],
        "summary": "Cadastra Produto.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "Paracetamol"
                },
                "lab_name": {
                  "example": "Cimed"
                },
                "image_link": {
                  "example": "url string"
                },
                "dosage": {
                  "example": "10mg"
                },
                "unit_price": {
                  "example": "20"
                },
                "type_product": {
                  "example": "controlled or uncontrolled"
                },
                "total_stock": {
                  "example": "100"
                },
                "description": {
                  "example": "Medicamento para dor de cabeça e febre"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/products/admin/{offset}/{limit}": {
      "get": {
        "description": "Este endpoint deve listar todos os produtos cadastrados do usuário administrador.",
        "tags": [
          "Products"
        ],
        "summary": "Lista produtos.",
        "parameters": [
          {
            "name": "offset",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Índice de início para a lista de produtos (valor padrão: 0)."
          },
          {
            "name": "limit",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Número máximo de produtos a serem retornados por página (valor padrão: 20)."
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Busca por letras do nome do produto."
          },
          {
            "name": "type_product",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Busca por tipo de produto."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    
    "/api/products/{product_id}": {
      "get": {
        "description": "Este endpoint de listar uma especificação do produto selecionado pelo id",
        "tags": [
          "Products"
        ],
        "summary": "Lista um produto.",
        "parameters": [
          {
            "description": "Id do produto.",
            "name": "product_id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/products/{offset}/{limit}": {
      "get": {
        "description": "Este endpoint deve listar todos os usuários.",
        "tags": [
          "Products"
        ],
        "summary": "Lista produtos.",
        "parameters": [
          {
            "name": "offset",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Índice de início para a lista de produtos (valor padrão: 0)."
          },
          {
            "name": "limit",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Número máximo de produtos a serem retornados por página (valor padrão: 20)."
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Busca por letras do nome do produto."
          },
          {
            "name": "type_product",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Busca por tipo de produto."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/products/admin/{product_id}": {
      "patch": {
        "description": "Este endpoint deve atualizar alguns campos do produto na aplicação.",
        "tags": [
          "Products"
        ],
        "summary": "Atualiza dados do produto.",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Id do produto."
          },
          {
            "name": "body",
            "in": "body",
            "description": "Campos a serem atualizados.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "Dorflex"
                },
                "image_link": {
                  "example": "url string"
                },
                "dosage": {
                  "example": "10mg"
                },
                "total_stock": {
                  "example": "20"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/buyers/admin/{offset}/{limit}": {
      "get": {
        "description": "Lista os compradores cadastrados no sistema.",
        "tags": [
          "Buyers"
        ],

        "summary": "Lista usuários compradores cadastrados.",
        "parameters": [
          {
            "name": "offset",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Índice de início para a lista de produtos (valor padrão: 0)."
          },
          {
            "name": "limit",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Número máximo de produtos a serem retornados por página (valor padrão: 20)."
          },
          {
            "name": "full_name",
            "in": "query",
            "type": "string",
            "description": "Busca por letras do nome do usuário."
            
          },
          {
            "name": "created_at",
            "in": "query",
            "type": "string",
            "description": "Busca por data de cadastro do usuário."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/buyers/address": {
      "get": {
        "description": "Este endpoint deve listar todos os endereços cadastrados do usuário.",
        "tags": [
          "Buyers"
        ],
        "summary": "Lista os endereços do usuário.",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/buyers/admin/{user_id}": {
      "get": {
        "description": "Lista um comprador cadastrado no sistema.",
        "tags": [
          "Buyers"
        ],
        "summary": "Lista um usuário comprador.",
        "parameters": [
          {
            "description": "Id do usuário comprador.",
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "description": "Atualiza as informações de um usuário no sistema.",
        "tags": [
          "Buyers"
        ],
        "summary": "Atualiza os dados de um usuário comprador.",
        "parameters": [
          {
            "description": "Id do usuário comprador.",
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "full_name": {
                  "example": "Alexandre Barbosa"
                },
                "email": {
                  "example": "alexandre@email.com"
                },
                "cpf": {
                  "example": "12345678912"
                },
                "phone": {
                  "example": "48999229922"
                },
                "type_user": {
                  "example": "Admin ou Buyer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/sales": {
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Cadastro de venda.",
        "description": "Rota responsável pelo cadastro de nova venda.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "venda",
            "description": "Array de produtos da venda.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesPost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Fields Not Formated"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict. Quantity purchased greater than quantity of products in stock"
          },
          "422": {
            "description": "Unprocessable Content"
          }
        }
      },
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Lista as compras do usuário.",
        "description": "Rota responsável pela listagem de compras efetuadas pelo usuário logado.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SalesList"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/sales/admin": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Fornece as vendas realizadas pelo administrador logado.",
        "description": "Vendas realizadas pelo administrador logado.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SalesList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/sales/dashboard/admin": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Devolve informações de vendas do administrador logado.",
        "description": "Retorna valor das vendas e quantidade de produtos vendidos.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SalesDashboard"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "apiKeyAuth": []
    }
  ],
  "definitions": {
    "UserSignup": {
      "description": "Cadastro de usuário",
      "type": "object",
      "properties": {
        "user": {
          "description": "Dados do usuário.  Obrigatório todos os campos.",
          "type": "object",
          "properties": {
            "full_name": {
              "type": "string",
              "example": "Alexandre Barbosa"
            },
            "cpf": {
              "type": "string",
              "example": "12345678912"
            },
            "birth_date": {
              "type": "string",
              "example": "1990-10-10"
            },
            "email": {
              "type": "string",
              "example": "alexandre@email.com",
              "description": "Email deve ser único"
            },
            "phone": {
              "type": "string",
              "example": "48999229922"
            },
            "password": {
              "definitions": "Deve conter no mínimo 8 caracteres 1 letra maiúscula, 1 letra minúscula, 1 número e 1 caractere especial",
              "type": "string",
              "example": "Senha@12345"
            }
          },
          "required": [
            "full_name",
            "cpf",
            "birth_date",
            "email",
            "phone",
            "password"
          ]
        },
        "address": {
          "description": "Lista de endereços do usuário.  Obrigatório pelo menos um endereço.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "zip": {
                "type": "string",
                "example": "88000000"
              },
              "street": {
                "type": "string",
                "example": "Rua das Flores"
              },
              "number_street": {
                "type": "string",
                "example": "123"
              },
              "neighborhood": {
                "type": "string",
                "example": "Centro"
              },
              "city": {
                "type": "string",
                "example": "Florianópolis"
              },
              "state": {
                "type": "string",
                "example": "SC"
              },
              "complement": {
                "type": "string",
                "example": "Casa"
              },
              "lat": {
                "type": "string",
                "example": "-27.594633"
              },
              "long": {
                "type": "string",
                "example": "-48.548527"
              }
            },
            "required": [
              "zip",
              "street",
              "number_street",
              "neighborhood",
              "city",
              "state"
            ]
          }
        }
      },
      "required": [
        "user",
        "address"
      ]
    },
    "UserLogin": {
      "description": "Login do usuário com email e senha",
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "alexandre@email.com"
        },
        "password": {
          "type": "string",
          "example": "Senha@12345"
        }
      }
    },
    "UserList": {
      "description": "Lista os usuários cadastrados no sistema.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": "1"
        },
        "full_name": {
          "type": "string",
          "example": "Alexandre Barbosa"
        },
        "cpf": {
          "type": "string",
          "example": "12345678912"
        },
        "birth_date": {
          "type": "string",
          "example": "1990-10-10"
        },
        "email": {
          "type": "string",
          "example": "alexandre@email.com"
        },
        "phone": {
          "type": "string",
          "example": "48999229922"
        },
        "type_user": {
          "type": "string",
          "example": "Admin ou Buyer"
        },
        "created_at": {
          "type": "data",
          "example": "2023-10-11T15:04:05.262Z"
        },
        "updated_at": {
          "type": "data",
          "example": "2023-10-11T15:04:05.262Z"
        }
      }
    },

    "UserAdminSignup": {
      "description": "Cadastro de administrador",
      "type": "object",
      "properties": {
        "user": {
          "description": "Dados do usuário.  Obrigatório todos os campos.",
          "type": "object",
          "properties": {
            "full_name": {
              "type": "string",
              "example": "Alexandre Barbosa"
            },
            "cpf": {
              "type": "string",
              "example": "12345678912"
            },
            "birth_date": {
              "type": "string",
              "example": "1990-10-10"
            },
            "email": {
              "type": "string",
              "example": "alexandre@email.com"
            },
            "phone": {
              "type": "string",
              "example": "48999229922"
            },
            "password": {
              "definitions": "Deve conter no mínimo 8 caracteres 1 letra maiúscula, 1 letra minúscula, 1 número e 1 caractere especial",
              "type": "string",
              "example": "Senha@12345"
            },
            "type_user": {
              "type": "string",
              "example": "Admin ou Buyer"
            }
          },
          "required": [
            "full_name",
            "cpf",
            "birth_date",
            "email",
            "phone",
            "password",
            "type_user"
          ]
        },
        "address": {
          "description": "Lista de endereços do usuário.  Obrigatório pelo menos um endereço.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "zip": {
                "type": "string",
                "example": "88000000"
              },
              "street": {
                "type": "string",
                "example": "Rua das Flores"
              },
              "number_street": {
                "type": "string",
                "example": "123"
              },
              "neighborhood": {
                "type": "string",
                "example": "Centro"
              },
              "city": {
                "type": "string",
                "example": "Florianópolis"
              },
              "state": {
                "type": "string",
                "example": "SC"
              },
              "complement": {
                "type": "string",
                "example": "Casa"
              },
              "lat": {
                "type": "string",
                "example": "-27.594633"
              },
              "long": {
                "type": "string",
                "example": "-48.548527"
              }
            },
            "required": [
              "zip",
              "street",
              "number_street",
              "neighborhood",
              "city",
              "state"
            ]
          }
        }
      },
      "required": [
        "user",
        "address"
      ]
    },
    "UserAdminLogin": {
      "description": "Login do administrador com email e senha",
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "alexandre@email.com"
        },
        "password": {
          "type": "string",
          "example": "Senha@12345"
        }
      }
    },
    "UserAdminList": {
      "description": "Lista os administradores cadastrados no sistema.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": "1"
        },
        "full_name": {
          "type": "string",
          "example": "Alexandre Barbosa"
        },
        "cpf": {
          "type": "string",
          "example": "12345678912"
        },
        "birth_date": {
          "type": "string",
          "example": "1990-10-10"
        },
        "email": {
          "type": "string",
          "example": "alexandre@email.com"
        },
        "phone": {
          "type": "string",
          "example": "48999229922"
        },
        "type_user": {
          "type": "string",
          "example": "Admin ou Buyer"
        },
        "created_at": {
          "type": "data",
          "example": "2023-10-11T15:04:05.262Z"
        },
        "updated_at": {
          "type": "data",
          "example": "2023-10-11T15:04:05.262Z"
        }
      }
    },
    "ProductsPost": {
      "description": "Cadastra um produto na aplicação.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Paracetamol"
        },
        "lab_name": {
          "type": "string",
          "example": "Cimed"
        },
        "image_link": {
          "type": "string",
          "example": "url string"
        },
        "dosage": {
          "type": "string",
          "example": "10mg"
        },
        "unit_price": {
          "type": "string",
          "example": "20"
        },
        "type_product": {
          "type": "string",
          "example": "controlled or uncontrolled"
        },
        "total_stock": {
          "type": "string",
          "example": "100"
        },
        "description": {
          "type": "string",
          "example": "Medicamento para dor de cabeça e febre"
        }
      }
    },
    "ProductsList": {
      "description": "Lista os produtos cadastrados no sistema.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": "1"
        },
        "name": {
          "type": "string",
          "example": "Paracetamol"
        },
        "lab_name": {
          "type": "string",
          "example": "Cimed"
        },
        "image_link": {
          "type": "string",
          "example": "url string"
        },
        "dosage": {
          "type": "string",
          "example": "10mg"
        },
        "unit_price": {
          "type": "string",
          "example": "20"
        },
        "type_product": {
          "type": "string",
          "example": "controlled or uncontrolled"
        },
        "total_stock": {
          "type": "string",
          "example": "100"
        },
        "description": {
          "type": "string",
          "example": "Medicamento para dor de cabeça e febre"
        },
        "created_at": {
          "type": "data",
          "example": "2023-10-11T15:04:05.262Z"
        },
        "updated_at": {
          "type": "data",
          "example": "2023-10-11T15:04:05.262Z"
        }
      }
    },
    "ProductsPatch": {
      "description": "Atualiza alguns campos do produto na aplicação.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Dorflex"
        },
        "image_link": {
          "type": "string",
          "example": "url string"
        },
        "dosage": {
          "type": "string",
          "example": "10mg"
        },
        "total_stock": {
          "type": "string",
          "example": "20"
        }
      }
    },
    "BuyersList": {
      "description": "Lista os compradores cadastrados no sistema.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": "1"
        },
        "full_name": {
          "type": "string",
          "example": "Alexandre Barbosa"
        },
        "cpf": {
          "type": "string",
          "example": "12345678912"
        },
        "birth_date": {
          "type": "string",
          "example": "1990-10-10"
        },
        "email": {
          "type": "string",
          "example": "alexandre@email.com"
        },
        "phone": {
          "type": "string",
          "example": "48999229922"
        },
        "type_user": {
          "type": "string",
          "example": "Admin ou Buyer"
        },
        "created_at": {
          "type": "data",
          "example": "2023-10-11T15:04:05.262Z"
        },
        "updated_at": {
          "type": "data",
          "example": "2023-10-11T15:04:05.262Z"
        }
      }
    },
    "BuyersAddressList": {
      "description": "Lista os endereços cadastrados no sistema.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": "1"
        },
        "zip": {
          "type": "string",
          "example": "88000000"
        },
        "street": {
          "type": "string",
          "example": "Rua das Flores"
        },
        "number_street": {
          "type": "string",
          "example": "123"
        },
        "neighborhood": {
          "type": "string",
          "example": "Centro"
        },
        "city": {
          "type": "string",
          "example": "Florianópolis"
        },
        "state": {
          "type": "string",
          "example": "SC"
        },
        "complement": {
          "type": "string",
          "example": "Casa"
        },
        "lat": {
          "type": "string",
          "example": "-27.594633"
        },
        "long": {
          "type": "string",
          "example": "-48.548527"
        },
        "created_at": {
          "type": "data",
          "example": "2023-10-11T15:04:05.262Z"
        },
        "updated_at": {
          "type": "data",
          "example": "2023-10-11T15:04:05.262Z"
        }
      }
    },
    "SalesPost": {
      "description": "Cadastro de venda.",
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "product_id",
          "amount_buy",
          "users_addresses_id",
          "type_payment"
        ],
        "properties": {
          "product_id": {
            "description": "Id do produto.",
            "type": "integer",
            "example": 1
          },
          "amount_buy": {
            "type": "integer",
            "example": 10,
            "description": "Quantidade de produtos comprados não pode ser maior que a quantidade de produtos em estoque"
          },
          "users_addresses_id": {
            "type": "integer",
            "example": 1,
            "description": "Id do endereço do usuário"
          },
          "type_payment": {
            "type": "string",
            "enum": [
              "credit_card",
              "debit_card",
              "payment_slip",
              "pix",
              "transfer"
            ],
            "description": "Tipo de pagamento deve ser credit_card, debit_card, payment_slip, pix ou transfer"
          }
        }
      }
    },
    "SalesList": {
      "description": "Lista as compras do usuário.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": "1"
        },
        "buyer_id": {
          "type": "integer",
          "example": "2"
        },
        "seller_id": {
          "type": "integer",
          "example": "1"
        },
        "product_id": {
          "type": "integer",
          "example": "1"
        },
        "users_addresses_id": {
          "type": "integer",
          "example": "1"
        },
        "amount_buy": {
          "type": "integer",
          "example": "12"
        },
        "total": {
          "type": "float",
          "example": "22.50"
        },
        "type_payment": {
          "type": "enum",
          "example": "pix"
        },
        "created_at": {
          "type": "data",
          "example": "2023-10-11T15:04:05.262Z"
        },
        "updated_at": {
          "type": "data",
          "example": "2023-10-11T15:04:05.262Z"
        }
      }
    },
    "SalesDashboard": {
      "description": "Devolve informações de vendas do administrador logado.",
      "type": "object",
      "properties": {
        "totalSales": {
          "type": "integer",
          "example": "150",
          "description": "Quantidade de vendas realizadas"
        },
        "totalAmount": {
          "type": "integer",
          "example": "35",
          "description": "Quantidade de produtos vendidos"
        }
      }
    }
  
,



  "definitions": {
    "SalesPost": {
      "description": "Cadastro de venda.",
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "product_id",
          "amount_buy",
          "users_addresses_id",
          "type_payment"
        ],
        "properties": {
          "product_id": {
            "description": "Id do produto.",
            "type": "integer",
            "example": 1
          },
          "amount_buy": {
            "type": "integer",
            "example": 10,
            "description": "Quantidade de produtos comprados não pode ser maior que a quantidade de produtos em estoque"
          },
          "users_addresses_id": {
            "type": "integer",
            "example": 1,
            "description": "Id do endereço do usuário"
          },
          "type_payment": {
            "type": "string",
            "enum": [
              "credit_card",
              "debit_card",
              "payment_slip",
              "pix",
              "transfer"
            ],
            "description": "Tipo de pagamento deve ser credit_card, debit_card, payment_slip, pix ou transfer"
          }
        }
      }
    },
    "SalesList": {
      "description": "Lista as compras do usuário.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": "1"
        },
        "buyer_id": {
          "type": "integer",
          "example": "2"
        },
        "seller_id": {
          "type": "integer",
          "example": "1"
        },
        "product_id": {
          "type": "integer",
          "example": "1"
        },
        "users_addresses_id": {
          "type": "integer",
          "example": "1"
        },
        "amount_buy": {
          "type": "integer",
          "example": "12"
        },
        "total": {
          "type": "float",
          "example": "22.50"
        },
        "type_payment": {
          "type": "enum",
          "example": "pix"
        },
        "created_at": {
          "type": "data",
          "example": "2023-10-11T15:04:05.262Z"
        },
        "updated_at": {
          "type": "data",
          "example": "2023-10-11T15:04:05.262Z"
        }
      }
    },
    "SalesDashboard": {
      "description": "Devolve informações de vendas do administrador logado.",
      "type": "object",
      "properties": {
        "totalSales": {
          "type": "integer",
          "example": "150",
          "description": "Quantidade de vendas realizadas"
        },
        "totalAmount": {
          "type": "integer",
          "example": "35",
          "description": "Quantidade de produtos vendidos"
        }
      }
    }
  }
}
}
